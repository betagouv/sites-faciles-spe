# Generated by Django 5.2.1 on 2025-05-23 15:59

from django.db import migrations
from blog.models import BlogIndexPage, BlogEntryPage
from itertools import chain


def migrate_obsolete_fields(apps, schema_editor):
    pages = chain(BlogEntryPage.objects.all(), BlogIndexPage.objects.all())

    for page in pages:
        if not page.header_cta_label and not page.header_cta_link:
            continue

        original_last_published = page.last_published_at

        button_block = (
            "button",
            {
                "text": page.header_cta_label,
                "button_type": "",
                "icon_class": "",
                "icon_side": "",
                "external_url": page.header_cta_link,
            },
        )

        page.header_cta_buttons = [("buttons", [button_block])]

        # Save a revision and publish it
        revision = page.save_revision()
        revision.publish()

        # Reset the last publication date to avoid indexing errors based on this field.
        page.last_published_at = original_last_published
        page.save(update_fields=["last_published_at"])


class Migration(migrations.Migration):

    dependencies = [
        ("blog", "0045_alter_blogentrypage_body_alter_blogindexpage_body_and_more"),
    ]

    operations = [migrations.RunPython(migrate_obsolete_fields)]
